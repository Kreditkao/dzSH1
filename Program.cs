using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

class Library
{
    static async Task Main()
    {
        Console.InputEncoding = Encoding.UTF8;
        Console.OutputEncoding = Encoding.UTF8;


        Console.WriteLine("üîê –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        string? username = Console.ReadLine();

        if (string.IsNullOrWhiteSpace(username))
        {
            Console.WriteLine("‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }

        var user = await DatabaseHelper.GetOrCreateUserAsync(username);
        var books = await DatabaseHelper.LoadBooksAsync();
        var library = new LibraryService(books) { CurrentUser = user };
        var updater = new BookUpdater(library);

        Console.WriteLine($"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.FullName}!");

        while (true)
        {
            Console.WriteLine("\n1 - –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥\n2 - –í–∑—è—Ç—å –∫–Ω–∏–≥—É\n3 - –í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É\n0 - –í—ã—Ö–æ–¥");
            Console.Write("–í–∞—à –≤—ã–±–æ—Ä: ");
            var choice = Console.ReadLine();

            if (choice == "1") library.ListBooks();
            else if (choice == "2")
            {
                Console.Write("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
                var title = Console.ReadLine();
                if (!string.IsNullOrWhiteSpace(title))
                    await library.BorrowBookAsync(title);
            }
            else if (choice == "3")
            {
                Console.Write("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
                var title = Console.ReadLine();
                if (!string.IsNullOrWhiteSpace(title))
                    await library.ReturnBookAsync(title);
            }
            else if (choice == "0")
            {
                library.StopAcceptingRequests();
                Console.WriteLine("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                break;
            }
        }
    }
}
